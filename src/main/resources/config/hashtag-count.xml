<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/hadoop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd">

	<configuration>
		fs.defaultFS=${spring.hadoop.fsUri}
		yarn.resourcemanager.hostname=${spring.hadoop.resourceManagerHost}
		mapreduce.framework.name=yarn
		mapreduce.jobhistory.address=${spring.hadoop.jobHistoryAddress}
	</configuration>

	<!-- required since Hadoop Job is a class not an interface and we need to use a Job with step scope to access #{jobParameters['...']} -->
	<beans:bean class="org.springframework.batch.core.scope.StepScope">
		<beans:property name="proxyTargetClass" value="true"/>
	</beans:bean>

	<batch:job id="job">
		<batch:step id="setup" next="hashtagcount">
			<batch:tasklet ref="scriptTasklet"/>
		</batch:step>
		<batch:step id="hashtagcount">
			<batch:tasklet ref="hashtagcount-tasklet" />
		</batch:step>
	</batch:job>

	<job-tasklet id="hashtagcount-tasklet" job-ref="hashtagcountJob"/>

	<job id="hashtagcountJob"
		input-path="${tweets.input.path}"
		output-path="${tweets.output.path}"
		jar="file:#{systemProperties['user.dir']}/target/hashtag-count-0.1.0.jar"
		mapper="com.springdeveloper.hadoop.TweetCountMapper"
		reducer="com.springdeveloper.hadoop.IntSumReducer"/>

	<script-tasklet id="scriptTasklet" script-ref="hdfsScript" scope="step"/>

	<script id="hdfsScript" language="javascript">
		<property name="hdfsOutputDir" value="${tweets.output.path}"/>
			// use the shell (made available under variable fsh)
			if (fsh.test(hdfsOutputDir)) fsh.rmr(hdfsOutputDir)
	</script>

</beans:beans>
